apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: wildfly-glow-generator-task
spec:
  params:
   - name: gitUrl
     type: string
   - name: gitRevision
     type: string
     default: ""
   - name: sourcesDir
     type: string
  results:
    - name: gitRevision
      description: The branch to create
    - name: contentLocation
      description: Where the generated content has been put
  workspaces:
    - name: sources
      description: The src dir
  steps:
    - name: generate-provisioning
      securityContext:
        runAsUser: 0
      image: "quay.io/wildfly/wildfly-runtime:latest"
      env:
        - name: WORKSPACE_SRC_PATH
          value: $(workspaces.sources.path)/$(params.sourcesDir)
      script: |
        #!/usr/bin/env bash
        set -eu
        srcDir="$WORKSPACE_SRC_PATH"
        files=`ls $srcDir/*.*`
        deployment=""
        ls -l $srcDir
        mkdir -p $WORKSPACE_SRC_PATH/wildfly-glow
        for eachfile in $files
        do
          if [[ $eachfile =~ .*.war ]] || [[ $eachfile =~ .*.jar ]] || [[ $eachfile =~ .*.ear ]]; then
            deployment="$deployment $eachfile"
          else
            cp $eachfile $WORKSPACE_SRC_PATH/wildfly-glow
          fi
        done
        if [ -n "${deployment}" ]; then
            gitURI=$(params.gitUrl)
            gitId=$(params.gitUrl)/revision/$(params.gitRevision)
            newBranch=`tr -s :@#/ _ <<< "$gitId"`
            appName=${gitURI##*/}
            echo "Retrieving WildFly Glow"            
            curl --insecure https://repository.jboss.org/nexus/content/repositories/snapshots/org/wildfly/glow/wildfly-glow/1.0.7.Final-SNAPSHOT/wildfly-glow-1.0.7.Final-20240606.090716-8.zip -LO
            unzip wildfly-glow*.zip -d .
            glowDir=`find $PWD -type d -iname "wildfly-glow*"`
            configFile=
            if [ -f "$srcDir/glow.config" ]; then
              configFile="--cli-config-file=$srcDir/glow.config"
            fi
            cliScript=
            if [ -f "$srcDir/script.cli" ]; then
              cliScript="--cli-script=$srcDir/script.cli"
            fi
            bashScript=
            if [ -f "$srcDir/init.sh" ]; then
              bashScript="--init-script=$srcDir/init.sh"
            fi
            $glowDir/wildfly-glow scan $deployment --cloud --provision openshift_resources --output-dir "$WORKSPACE_SRC_PATH/wildfly-glow" --properties="-Dorg.wildfly.glow.openshift.git.uri=https://github.com/jfdenise/go-to-openshift -Dorg.wildfly.glow.openshift.git.ref=$newBranch -Dorg.wildfly.glow.openshift.app.name=$appName" $configFile $cliScript $bashScript
            rm -rf $glowDir
            if [ $? == 0 ]; then
                echo "Good to go to OpenShift!"

                echo -n "wildfly-glow" > $(results.contentLocation.path)
                echo -n "$newBranch" > $(results.gitRevision.path)

                ls -al $WORKSPACE_SRC_PATH/wildfly-glow
            else
                echo "Error while scanning the deployment!"
                cat tmp/output.txt
                exit 1
            fi
        else
            echo "No deployment to scan!"
            exit 1
        fi