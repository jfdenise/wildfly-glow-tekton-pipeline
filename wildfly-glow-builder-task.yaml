apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: wildfly-glow-builder-task
spec:
  params:
   - name: gitUrl
     type: string
   - name: gitRevision
     type: string
     default: ""
  results:
    - name: gitRevision
      description: The branch to create
    - name: contentLocation
      description: Where the generated content has been put
    - name: appName
      description: The name of the application
  workspaces:
    - name: sources
      description: The src dir
  steps:
    - name: generate-provisioning
      securityContext:
        runAsUser: 0
      image: "quay.io/wildfly/wildfly-runtime:latest"
      env:
        - name: WORKSPACE_SRC_PATH
          value: $(workspaces.sources.path)
      script: |
        #!/usr/bin/env bash
        set -eu
        #war are located at the root of the src dir
        srcDir="$WORKSPACE_SRC_PATH/cloned-repo"
        files=`ls $srcDir/*.*`
        deployment=""
        rm -rf $WORKSPACE_SRC_PATH/wildfly-glow
        mkdir -p $WORKSPACE_SRC_PATH/wildfly-glow
        for eachfile in $files
        do
            deployment="$deployment $eachfile"
        done
        if [ -n "${deployment}" ]; then
            echo "Retrieving WildFly Glow"            
            curl --insecure https://repository.jboss.org/nexus/content/repositories/snapshots/org/wildfly/glow/wildfly-glow/1.0.7.Final-SNAPSHOT/wildfly-glow-1.0.7.Final-20240604.172644-1.zip -LO
            unzip wildfly-glow*.zip -d .
            glowDir=`find $PWD -type d -iname "wildfly-glow*"`
            $glowDir/wildfly-glow scan $deployment --cloud --provision openshift_resources --output-dir scan_result
            rm -rf $glowDir
            if [ $? == 0 ]; then
                echo "Good to go to OpenShift!"

                mv scan_result/* $WORKSPACE_SRC_PATH/wildfly-glow
                # Branch from the url+revision
                md5sum $srcDir/* > checksums.txt
                md5Git=(`echo -n "$(params.gitUrl)#$(params.gitRevision)" | md5sum`)
                echo "$md5Git $(params.gitUrl)#$(params.gitRevision)\n" >> checksums.txt
                md5Prov=`md5sum "$WORKSPACE_SRC_PATH/wildfly-glow/galleon/provisioning.xml"`
                echo "$md5Prov galleon/provisioning.xml\n" >> checksums.txt
                md5=`md5sum checksums.txt`
                mv checksums.txt $WORKSPACE_SRC_PATH/wildfly-glow
                echo -n "wildfly-glow" > $(results.contentLocation.path)
                gitId=$(params.gitUrl)/revision/$(params.gitRevision)
                newBranch=`tr -s :@#/ _ <<< "$gitId"`
                echo -n "$newBranch" > $(results.gitRevision.path)
                gitURI=$(params.gitUrl)
                appName=${gitURI##*/}
                echo -n "$appName" > $(results.appName.path)
                sed -i "s|WILDFLY_GLOW_GIT_URI|"https://github.com/jfdenise/go-to-openshift"|" "$WORKSPACE_SRC_PATH/wildfly-glow/helm.yaml" 
                sed -i "s|WILDFLY_GLOW_GIT_REF|"$newBranch"|" "$WORKSPACE_SRC_PATH/wildfly-glow/helm.yaml" 
                ls -l $WORKSPACE_SRC_PATH/wildfly-glow
            else
                echo "Error while scanning the deployment!"
                cat tmp/output.txt
                exit 1
            fi
        else
            echo "No deployment to scan!"
            exit 1
        fi